# US/Pacific 5/10/2014
= Send computer estimates for building count in 10m windows
    Write get_dataset_from_datasets
    Write get_counts_from_predictions
    Record execution time
    Record precision and recall
    = Write bash script to train and run sklearn.logistic_regression
        = Run train Myanmar and test on Myanmar
            + Set up server on digitalocean
            Set up server with lots of memory
        Train with all and test on Myanmar
    Write bash script to train and run sklearn.support_vector_machine
        Run train Myanmar and test on Myanmar
        Train with all and test on Myanmar
    Write bash script to train and run cudaconv2
        = Train with Myanmar and test on Myanmar
        Train with all and test on Myanmar
    Run cuda-convnet on test dataset
        Write script to set up gpu machine
        Run cuda-convnet on cifar10
        Run cuda-convnet on d10k
        Run cuda-convnet on d100k
    Finalize initial architecture
        = Evaluate new libraries for image recognition [6h]
            + Train classifier with scikit-learn
            Train classifier with cuda-convnet and noccn
            Train classifier with cuda-convnet and dropout
            Train classifier with dropconnect
            Train classifier with pybrain
            Train classifier with pynnet
            Train classifier with opencv
            Train classifier with neurolab
            Train classifier with pylearn2
            Train classifier with theano
            Train classifier with OverFeat
Combine Amazon Mechanical Turk results into a clean dataset [8h]
    Set up Amazon Mechanical Turk to estimate the building count in a window [10h]
Reach cross-validation accuracy of 75%
    Optimize classifier to estimate the building count in a window [20h]
Evaluate classifiers on cost-effective lower resolution satellite images
    Train classifiers on lower resolution satellite images [14h]
Reach cross-validation accuracy of 80%
    Apply different techniques to improve classifier performance [14h]
        Experiment with YUV colorspace
Explore new libraries
    Write code example with https://code.google.com/p/pyresample/
    Write code example with https://github.com/mraspaud/mpop
    Write code example with https://github.com/matplotlib/basemap
    Write code example with https://code.google.com/p/pycoast/
    Write code example with https://github.com/mraspaud/trollimage
    Write code example with https://pypi.python.org/pypi/OWSLib
    Work through tutorials on http://www.pytroll.org/
    Write code example with scikit-image
    Write code example with cartopy
Send access credentials to all tools, valid with no membership fee for one year
    Mask paths in run.pkl
    Feature Modi Research Group logo and link on tool webpage
